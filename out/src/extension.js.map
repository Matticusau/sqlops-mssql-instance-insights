{"version":3,"sources":["../src/extension.ts"],"names":[],"mappings":"AAAA,EAAE;AACF,uBAAuB;AACvB,sBAAsB;AACtB,kCAAkC;AAClC,EAAE;AACF,gCAAgC;AAChC,6FAA6F;AAC7F,uJAAuJ;AACvJ,EAAE;AAEF,YAAY,CAAC;;AAab,iEAA0D;AAE1D,IAAI,WAAW,GAAqB,EAAE,CAAC;AAGvC,yDAAyD;AACzD,0EAA0E;AAC1E,kBAAyB,OAAgC;IAErD,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;IAEnC,kCAAkC;IAClC,IAAI,WAAW,GAAuB,EAAE,CAAC;IAEzC,4BAA4B;IAC5B,IAAI,cAAc,GAAG,IAAI,wBAAc,CAAC,OAAO,CAAC,CAAC;IACjD,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACjC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAC3C,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,CAAC;IAE5C,4FAA4F;IAC5F,gFAAgF;IAChF,OAAO,CAAC,GAAG,CAAC,0EAA0E,CAAC,CAAC;IAExF,sCAAsC;IACtC,OAAO,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;SAC1B,IAAI,CAAC,CAAC,OAAkB,EAAE,EAAE;QACzB,KAAK,IAAI,MAAM,IAAI,OAAO,EAAE;YACxB,IAAI,CAAC,MAAM,EAAE;gBACT,OAAO,KAAK,CAAC;aAChB;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC,CAAC,CAAC;AACX,CAAC;AA3BD,4BA2BC;AAED,2DAA2D;AAC3D;IACI,qCAAqC;IACrC,KAAK,IAAI,UAAU,IAAI,WAAW,EAAE;QAChC,UAAU,CAAC,UAAU,EAAE,CAAC;KAC3B;AACL,CAAC;AALD,gCAKC","file":"extension.js","sourcesContent":["//\r\n// Author:  Matt Lavery\r\n// Date:    02/07/2018\r\n// Purpose: extension entry module\r\n//\r\n// When         Who         What\r\n// ------------------------------------------------------------------------------------------\r\n// 02/07/2018   MLavery     Strictly set 'any' types to fix src\\extension.ts(50,55): error TS7006: Parameter 'connection' implicitly has an 'any' type.\r\n//\r\n\r\n'use strict';\r\n// The module 'vscode' contains the VS Code extensibility API\r\n// Import the module and reference it with the alias vscode in your code below\r\nimport * as vscode from 'vscode';\r\n\r\n// The module 'sqlops' contains the SQL Operations Studio extensibility API\r\n// This is a complementary set of APIs that add SQL / Data-specific functionality to the app\r\n// Import the module and reference it with the alias sqlops in your code below\r\n\r\n// import * as sqlops from 'sqlops';\r\n\r\n// import the controller\r\nimport ControllerBase from './controllers/controllerBase';\r\nimport MainController from './controllers/mainController';\r\n\r\nlet controllers: ControllerBase[] = [];\r\n\r\n\r\n// this method is called when your extension is activated\r\n// your extension is activated the very first time the command is executed\r\nexport function activate(context: vscode.ExtensionContext) {\r\n\r\n    console.log('Starting activation');\r\n\r\n    // taken from the extensionSamples\r\n    let activations: Promise<boolean>[] = [];\r\n\r\n    // Start the main controller\r\n    let mainController = new MainController(context);\r\n    controllers.push(mainController);\r\n    context.subscriptions.push(mainController);\r\n    activations.push(mainController.activate());\r\n\r\n    // Use the console to output diagnostic information (console.log) and errors (console.error)\r\n    // This line of code will only be executed once when your extension is activated\r\n    console.log('Congratulations, your extension \"mssql-instance-insights\" is now active!');\r\n\r\n    // activations - from extensionSamples\r\n    return Promise.all(activations)\r\n        .then((results: boolean[]) => {\r\n            for (let result of results) {\r\n                if (!result) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n}\r\n\r\n// this method is called when your extension is deactivated\r\nexport function deactivate() {\r\n    // deactive any controllers we loaded\r\n    for (let controller of controllers) {\r\n        controller.deactivate();\r\n    }\r\n}"],"sourceRoot":"C:\\GitHub\\sqlops-mssql-instance-insights/src"}